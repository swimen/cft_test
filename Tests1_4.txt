Задания разработаны только для цели тестирования.
Просьба прочитать задания внимательно, ответы на большинство вопросов содержатся в условиях.
Решение желательно выполнить на PL/SQL с указанием версии БД.
Предполагаем, что проверяющий не знает решение и нуждается в комментариях кода.
Решение для каждой задачи требуется оформить в отдельном текстовом файле.
Желательно приложить скрипт создания тестовых данных, на которых выполнена проверка.

Задание 1
---------
В дереве разделов с любым количеством уровней
каждый раздел на любом уровне может иметь перечень тем...

-- у каждого раздела могут быть как подразделы, так и темы
create table chapters (chapid number primary key, -- идентификатор раздела
 par_chapid number references chapters, -- ссылка на родительский раздел
 subject varchar2(200), -- имя таблицы тем данного раздела
 wpages varchar2(4000), -- таблицы страниц для таблицы раздела через запятую (пример: 'wpage1,wpage2')
 address varchar2(400) -- адрес расположения
 );
create index chapind_id on chapters (chapid,subject) compute statistics;

-- формат таблиц тем (здесь к примеру subject1)
create table subject1 (subjectid number primary key,--  ключ
 numberofviews number(10), -- количество просмотров
    name varchar2(200) -- наименование
);
create index subject1ind_id on subject1 (subjectid) compute statistics;

-- у темы есть страницы
-- для каждой страницы создана отдельная таблица
-- для примера wpage1
create table wpage1 (subject references subject1, -- ссылка на тему
header varchar2(1000), -- заголовок сообщения
answers number -- количество ответов 
);

Задача:
Вывести в виде дерева список разделов упорядоченно по адресу расположения (по возрастанию).
У каждого раздела вывести ВСЕ его темы.
Не имеющие страниц темы не выводить, но пустые разделы вывести.
В каждой теме вывести ВСЕ страницы
Для каждой страницы вывести первые 5 заголовков из всех в порядке УБЫВАНИЯ значения в поле ANSWERS.

Во время выполнения кода изменений данных не происходит.
Код должен быть как можно более отказоустойчивым.

Пример формата вывода
 Раздел Кх
  ...
  Тема m
   ...
   Страница1
    1 header, answers
    ...
    5 header, answers
  ...
  Подраздел Кх.n
   ...
   Тема i
    ...
    Page
     1 header, answers
     ...
     5 header, answers

Структуру данных изменять нельзя! При необходимости можно добавлять индексы.

Задание 2
---------
Существуют таблицы, в которых хранятся данные о сотрудниках и списке входов выходов

Persons	- Таблица "Сотрудники"
Id number - Идентификатор сотрудника 
Name varchar2(150) - ФИО сотрудника			

Journal	- Таблица "Журнал входов выходов"
Id number - Идентификатор записи в журнале
Per_Id number - Идентификатор сотрудника
DTime Date - Дата и время события
Type varchar2(1) - Тип события: '0' – вход, '1' – выход
 	
Написать SQL запрос для получения списка сотрудников и числа их опозданий за месяц,
отсортированного по числу опозданий (убывание) и фио сотрудников, не учитывая опоздания в выходные дни.
Сотрудники могут входить и выходить любое кол-во раз за день. 
Опозданием считается первый вход за этот день после начала рабочего дня.
Если сотрудник ни разу не вошел в рабочее время, то этот день не считается опозданием и учитывается как отсутствие.


Задание 3
---------
В текстовом файле содержится график отпусков и отгулов.
В каждой строке указаны или две даты периода отпуска, разделенные пробелом, или одна дата отгула,
далее через пробел указана Фамилия.
Даты заданы в определенном формате.
Если указаны две даты, то первой может быть как начальная дата отпуска, так и конечная.

ЗАДАЧА:
Вывести отсортированные строки в соответствии со следующими условиями:
- возрастание начальной даты периода отпуска
- если начальные даты отпуска совпадают, то по убыванию длины отпуска
- если в строке указана одна дата отгула или две даты в строке равны, то длина отпуска принимается равной нулю
Не разрешается использовать таблицы базы данных и SQL запросы.

Пример данных в файле:
12.03.2017 Кузнецов
02.03.2017 16.03.2017 Васильев
13.04.2017 Николаев
13.04.2017 10.04.2017 Сидоров
22.02.2017 Лукин

4)
Таблица каталога продуктов
create table catalog (cid number primary key, -- id раздела
 par_cid number references catalog, -- ссылка на родительский раздел
 rname varchar2(400), -- наименование раздела
 rdescr varchar2(4000), -- описание
 rcdate date -- дата создания
 );
Таблица продуктов
create table products (pid number primary key, -- id продукта
 rcid number references catalog, -- ссылка на каталог
 pname varchar2(500), -- наименование продукта
 pdescr varchar2(4000), -- спецификация
 punit number references units, -- единица измерения
 pper number references persons, -- ответственный
 );
Таблица движения продуктов
create table records (rpid number references products, -- продукт
 rdate date, -- дата операции
 incoming varchar2(2) default '1', -- поступление '1', расход '0'
 quantity number, -- количество
 rate number -- цена в рублях
 );

Требуется написать sql запрос для вывода примерно в таком виде

<Наименование раздела каталога уровня1>      || Поступление. Руб. || Расход. Руб
 ...
 <Наименование раздела каталога уровня(K-1)> || Поступление. Руб. || Расход. Руб
  <Наименование раздела каталога уровня(K)>  || Поступление. Руб. || Расход. Руб
    <Наименование Продукта1 этого раздела>   || Поступление. Руб. || Расход. Руб || Поступление. Количество || Расход. Количество || Остаток
    ...
    <Наименование ПродуктаN этого раздела>   || Поступление. Руб. || Расход. Руб || Поступление. Количество || Расход. Количество || Остаток 
  <Наименование раздела каталога уровня(K)>  || Поступление. Руб. || Расход. Руб
    <Наименование Продукта1 этого раздела>   || Поступление. Руб. || Расход. Руб || Поступление. Количество || Расход. Количество || Остаток
    ...
    <Наименование ПродуктаN этого раздела>   || Поступление. Руб. || Расход. Руб || Поступление. Количество || Расход. Количество || Остаток 
<Наименование раздела каталога уровня1>      || Поступление. Руб. || Расход. Руб
 ... и так далее аналогично

! Расчет для разделов должен выполняться в соответствии с иерархией.
